import { Injectable, Logger } from '@nestjs/common';
import { InjectRepository } from '@nestjs/typeorm';
import { RegionEnum } from 'src/common/enums/region';

import { Region } from 'src/domain/regions/entities/region.entity';
import { Repository } from 'typeorm';

@Injectable()
export class RegionsService {
  private readonly logger = new Logger(RegionsService.name);

  constructor(
    @InjectRepository(Region)
    private readonly repository: Repository<Region>,
  ) {}

  //?-------------------------------------------------------------------------//
  //? READ
  //?-------------------------------------------------------------------------//

  async findAll(): Promise<any> {
    return await this.repository.manager.getTreeRepository(Region).findTrees();
  }

  //?-------------------------------------------------------------------------//
  //? SEED
  //?-------------------------------------------------------------------------//

  async seedRegion(): Promise<void> {
    let district;

    const root = new Region();
    root.slug = 'root';
    await this.repository.manager.save(root);

    const korea = new Region();
    korea.slug = RegionEnum.KOREA;
    korea.depth = 1;
    korea.parent = root;
    await this.repository.manager.save(korea);

    const seoul = new Region();
    seoul.slug = RegionEnum.SEOUL;
    seoul.depth = 2;
    seoul.parent = korea;
    await this.repository.manager.save(seoul);
    district = new Region();
    district.slug = RegionEnum.SEOUL_GANGNAM_GU;
    district.depth = 3;
    district.parent = seoul;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SEOUL_GANGDONG_GU;
    district.depth = 3;
    district.parent = seoul;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SEOUL_GANGBUK_GU;
    district.depth = 3;
    district.parent = seoul;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SEOUL_GANGSEO_GU;
    district.depth = 3;
    district.parent = seoul;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SEOUL_GWANAK_GU;
    district.depth = 3;
    district.parent = seoul;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SEOUL_GWANGJIN_GU;
    district.depth = 3;
    district.parent = seoul;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SEOUL_GURO_GU;
    district.depth = 3;
    district.parent = seoul;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SEOUL_GEUMCHEON_GU;
    district.depth = 3;
    district.parent = seoul;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SEOUL_NOWON_GU;
    district.depth = 3;
    district.parent = seoul;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SEOUL_DOBONG_GU;
    district.depth = 3;
    district.parent = seoul;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SEOUL_DONGDAEMUN_GU;
    district.depth = 3;
    district.parent = seoul;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SEOUL_DONGJAK_GU;
    district.depth = 3;
    district.parent = seoul;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SEOUL_MAPO_GU;
    district.depth = 3;
    district.parent = seoul;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SEOUL_SEODAEMUN_GU;
    district.depth = 3;
    district.parent = seoul;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SEOUL_SEOCHO_GU;
    district.depth = 3;
    district.parent = seoul;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SEOUL_SEONGDONG_GU;
    district.depth = 3;
    district.parent = seoul;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SEOUL_SEONGBUK_GU;
    district.depth = 3;
    district.parent = seoul;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SEOUL_SONGPA_GU;
    district.depth = 3;
    district.parent = seoul;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SEOUL_YANGCHEON_GU;
    district.depth = 3;
    district.parent = seoul;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SEOUL_YEONGDEUNGPO_GU;
    district.depth = 3;
    district.parent = seoul;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SEOUL_YONGSAN_GU;
    district.depth = 3;
    district.parent = seoul;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SEOUL_EUNPYEONG_GU;
    district.depth = 3;
    district.parent = seoul;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SEOUL_JONGNO_GU;
    district.depth = 3;
    district.parent = seoul;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SEOUL_JUNG_GU;
    district.depth = 3;
    district.parent = seoul;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SEOUL_JUNGNANG_GU;
    district.depth = 3;
    district.parent = seoul;
    await this.repository.manager.save(district);

    const busan = new Region();
    busan.slug = RegionEnum.BUSAN;
    busan.depth = 2;
    busan.parent = korea;
    await this.repository.manager.save(busan);
    district = new Region();
    district.slug = RegionEnum.BUSAN_JUNG_GU;
    district.depth = 3;
    district.parent = busan;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.BUSAN_SEO_GU;
    district.depth = 3;
    district.parent = busan;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.BUSAN_DONG_GU;
    district.depth = 3;
    district.parent = busan;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.BUSAN_YEONGDO_GU;
    district.depth = 3;
    district.parent = busan;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.BUSAN_BUSANJIN_GU;
    district.depth = 3;
    district.parent = busan;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.BUSAN_DONGNAE_GU;
    district.depth = 3;
    district.parent = busan;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.BUSAN_NAM_GU;
    district.depth = 3;
    district.parent = busan;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.BUSAN_BUK_GU;
    district.depth = 3;
    district.parent = busan;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.BUSAN_HAEUNDAE_GU;
    district.depth = 3;
    district.parent = busan;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.BUSAN_SAHA_GU;
    district.depth = 3;
    district.parent = busan;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.BUSAN_GEUMJEONG_GU;
    district.depth = 3;
    district.parent = busan;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.BUSAN_GANGSEO_GU;
    district.depth = 3;
    district.parent = busan;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.BUSAN_YEONJE_GU;
    district.depth = 3;
    district.parent = busan;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.BUSAN_SUYEONG_GU;
    district.depth = 3;
    district.parent = busan;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.BUSAN_SASANG_GU;
    district.depth = 3;
    district.parent = busan;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.BUSAN_GIJANG_GUN;
    district.depth = 3;
    district.parent = busan;
    await this.repository.manager.save(district);

    const incheon = new Region();
    incheon.slug = RegionEnum.INCHEON;
    incheon.depth = 2;
    incheon.parent = korea;
    await this.repository.manager.save(incheon);
    district = new Region();
    district.slug = RegionEnum.INCHEON_DONG_GU;
    district.depth = 3;
    district.parent = incheon;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.INCHEON_SEO_GU;
    district.depth = 3;
    district.parent = incheon;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.INCHEON_NAMDONG_GU;
    district.depth = 3;
    district.parent = incheon;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.INCHEON_JUNG_GU;
    district.depth = 3;
    district.parent = incheon;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.INCHEON_YEONSU_GU;
    district.depth = 3;
    district.parent = incheon;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.INCHEON_BUPYEONG_GU;
    district.depth = 3;
    district.parent = incheon;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.INCHEON_MICHUHOL_GU;
    district.depth = 3;
    district.parent = incheon;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.INCHEON_GYEYANG_GU;
    district.depth = 3;
    district.parent = incheon;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.INCHEON_GANGHWA_GUN;
    district.depth = 3;
    district.parent = incheon;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.INCHEON_ONGJIN_GUN;
    district.depth = 3;
    district.parent = incheon;
    await this.repository.manager.save(district);

    const ulsan = new Region();
    ulsan.slug = RegionEnum.ULSAN;
    ulsan.depth = 2;
    ulsan.parent = korea;
    await this.repository.manager.save(ulsan);
    district = new Region();
    district.slug = RegionEnum.ULSAN_DONG_GU;
    district.depth = 3;
    district.parent = ulsan;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.ULSAN_NAM_GU;
    district.depth = 3;
    district.parent = ulsan;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.ULSAN_BUK_GU;
    district.depth = 3;
    district.parent = ulsan;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.ULSAN_JUNG_GU;
    district.depth = 3;
    district.parent = ulsan;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.ULSAN_ULJU_GUN;
    district.depth = 3;
    district.parent = ulsan;
    await this.repository.manager.save(district);

    const daejeon = new Region();
    daejeon.slug = RegionEnum.DAEJEON;
    daejeon.depth = 2;
    daejeon.parent = korea;
    await this.repository.manager.save(daejeon);
    district = new Region();
    district.slug = RegionEnum.DAEJEON_DONG_GU;
    district.depth = 3;
    district.parent = daejeon;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.DAEJEON_SEO_GU;
    district.depth = 3;
    district.parent = daejeon;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.DAEJEON_JUNG_GU;
    district.depth = 3;
    district.parent = daejeon;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.DAEJEON_DAEDEOK_GU;
    district.depth = 3;
    district.parent = daejeon;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.DAEJEON_YUSEONG_GU;
    district.depth = 3;
    district.parent = daejeon;
    await this.repository.manager.save(district);

    const daegu = new Region();
    daegu.slug = RegionEnum.DAEGU;
    daegu.depth = 2;
    daegu.parent = korea;
    await this.repository.manager.save(daegu);
    district = new Region();
    district.slug = RegionEnum.DAEGU_DONG_GU;
    district.depth = 3;
    district.parent = daegu;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.DAEGU_SEO_GU;
    district.depth = 3;
    district.parent = daegu;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.DAEGU_NAM_GU;
    district.depth = 3;
    district.parent = daegu;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.DAEGU_BUK_GU;
    district.depth = 3;
    district.parent = daegu;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.DAEGU_JUNG_GU;
    district.depth = 3;
    district.parent = daegu;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.DAEGU_SUSEONG_GU;
    district.depth = 3;
    district.parent = daegu;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.DAEGU_DALSEO_GU;
    district.depth = 3;
    district.parent = daegu;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.DAEGU_DALSEONG_GUN;
    district.depth = 3;
    district.parent = daegu;
    await this.repository.manager.save(district);

    const gwangju = new Region();
    gwangju.slug = RegionEnum.GWANGJU;
    gwangju.depth = 2;
    gwangju.parent = korea;
    await this.repository.manager.save(gwangju);
    district = new Region();
    district.slug = RegionEnum.GWANGJU_GWANGSAN_GU;
    district.depth = 3;
    district.parent = gwangju;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GWANGJU_DONG_GU;
    district.depth = 3;
    district.parent = gwangju;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GWANGJU_SEO_GU;
    district.depth = 3;
    district.parent = gwangju;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GWANGJU_NAM_GU;
    district.depth = 3;
    district.parent = gwangju;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GWANGJU_BUK_GU;
    district.depth = 3;
    district.parent = gwangju;
    await this.repository.manager.save(district);

    const sejong = new Region();
    sejong.slug = RegionEnum.SEJONG;
    sejong.depth = 2;
    sejong.parent = korea;
    await this.repository.manager.save(sejong);

    const gyeonggi = new Region();
    gyeonggi.slug = RegionEnum.GYEONGGI;
    gyeonggi.depth = 2;
    gyeonggi.parent = korea;
    await this.repository.manager.save(gyeonggi);

    district = new Region();
    district.slug = RegionEnum.GYEONGGI_GAPYEONG;
    district.depth = 3;
    district.parent = gyeonggi;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GYEONGGI_GOYANG;
    district.depth = 3;
    district.parent = gyeonggi;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GYEONGGI_GWACHEON;
    district.depth = 3;
    district.parent = gyeonggi;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GYEONGGI_GWANGMYEONG;
    district.depth = 3;
    district.parent = gyeonggi;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GYEONGGI_GWANGJU;
    district.depth = 3;
    district.parent = gyeonggi;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GYEONGGI_GURI;
    district.depth = 3;
    district.parent = gyeonggi;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GYEONGGI_GUNPO;
    district.depth = 3;
    district.parent = gyeonggi;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GYEONGGI_GIMPO;
    district.depth = 3;
    district.parent = gyeonggi;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GYEONGGI_NAMYANGJU;
    district.depth = 3;
    district.parent = gyeonggi;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GYEONGGI_DONGDUCHEON;
    district.depth = 3;
    district.parent = gyeonggi;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GYEONGGI_BUCHEON;
    district.depth = 3;
    district.parent = gyeonggi;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GYEONGGI_SEONGNAM;
    district.depth = 3;
    district.parent = gyeonggi;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GYEONGGI_SUWON;
    district.depth = 3;
    district.parent = gyeonggi;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GYEONGGI_SIHEUNG;
    district.depth = 3;
    district.parent = gyeonggi;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GYEONGGI_ANSAN;
    district.depth = 3;
    district.parent = gyeonggi;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GYEONGGI_ANSEONG;
    district.depth = 3;
    district.parent = gyeonggi;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GYEONGGI_ANYANG;
    district.depth = 3;
    district.parent = gyeonggi;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GYEONGGI_YANGJU;
    district.depth = 3;
    district.parent = gyeonggi;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GYEONGGI_YANGPYEONG;
    district.depth = 3;
    district.parent = gyeonggi;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GYEONGGI_YEOJU;
    district.depth = 3;
    district.parent = gyeonggi;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GYEONGGI_YEONCHEON;
    district.depth = 3;
    district.parent = gyeonggi;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GYEONGGI_OSAN;
    district.depth = 3;
    district.parent = gyeonggi;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GYEONGGI_YONGIN;
    district.depth = 3;
    district.parent = gyeonggi;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GYEONGGI_UIWANG;
    district.depth = 3;
    district.parent = gyeonggi;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GYEONGGI_UIJEONGBU;
    district.depth = 3;
    district.parent = gyeonggi;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GYEONGGI_ICHEON;
    district.depth = 3;
    district.parent = gyeonggi;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GYEONGGI_PAJU;
    district.depth = 3;
    district.parent = gyeonggi;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GYEONGGI_PYEONGTAEK;
    district.depth = 3;
    district.parent = gyeonggi;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GYEONGGI_POCHEON;
    district.depth = 3;
    district.parent = gyeonggi;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GYEONGGI_HANAM;
    district.depth = 3;
    district.parent = gyeonggi;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GYEONGGI_HWASEONG;
    district.depth = 3;
    district.parent = gyeonggi;
    await this.repository.manager.save(district);

    const gangwon = new Region();
    gangwon.slug = RegionEnum.GANGWON;
    gangwon.depth = 2;
    gangwon.parent = korea;
    await this.repository.manager.save(gangwon);

    district = new Region();
    district.slug = RegionEnum.GANGWON_CHEORWON;
    district.depth = 3;
    district.parent = gangwon;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GANGWON_HWACHEON;
    district.depth = 3;
    district.parent = gangwon;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GANGWON_YANGGU;
    district.depth = 3;
    district.parent = gangwon;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GANGWON_GOSEONG;
    district.depth = 3;
    district.parent = gangwon;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GANGWON_SOKCHO;
    district.depth = 3;
    district.parent = gangwon;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GANGWON_INJE;
    district.depth = 3;
    district.parent = gangwon;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GANGWON_YANGYANG;
    district.depth = 3;
    district.parent = gangwon;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GANGWON_CHUNCHEON;
    district.depth = 3;
    district.parent = gangwon;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GANGWON_HONGCHEON;
    district.depth = 3;
    district.parent = gangwon;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GANGWON_GANGNEUNG;
    district.depth = 3;
    district.parent = gangwon;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GANGWON_DONGHAE;
    district.depth = 3;
    district.parent = gangwon;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GANGWON_SAMCHEOK;
    district.depth = 3;
    district.parent = gangwon;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GANGWON_TAEBAEK;
    district.depth = 3;
    district.parent = gangwon;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GANGWON_JEONGSEON;
    district.depth = 3;
    district.parent = gangwon;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GANGWON_PYEONGCHANG;
    district.depth = 3;
    district.parent = gangwon;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GANGWON_HOENGSEONG;
    district.depth = 3;
    district.parent = gangwon;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GANGWON_WONJU;
    district.depth = 3;
    district.parent = gangwon;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.GANGWON_YEONGWOL;
    district.depth = 3;
    district.parent = gangwon;
    await this.repository.manager.save(district);

    const northenJeolla = new Region();
    northenJeolla.slug = RegionEnum.NORTHERN_JEOLLA;
    northenJeolla.depth = 2;
    northenJeolla.parent = korea;
    await this.repository.manager.save(northenJeolla);

    district = new Region();
    district.slug = RegionEnum.NORTHERN_JEOLLA_GUNSAN;
    district.depth = 3;
    district.parent = northenJeolla;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_JEOLLA_IKSAN;
    district.depth = 3;
    district.parent = northenJeolla;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_JEOLLA_WANJU;
    district.depth = 3;
    district.parent = northenJeolla;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_JEOLLA_JINAN;
    district.depth = 3;
    district.parent = northenJeolla;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_JEOLLA_MUJU;
    district.depth = 3;
    district.parent = northenJeolla;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_JEOLLA_GIMJE;
    district.depth = 3;
    district.parent = northenJeolla;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_JEOLLA_JEONJU;
    district.depth = 3;
    district.parent = northenJeolla;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_JEOLLA_JANGSU;
    district.depth = 3;
    district.parent = northenJeolla;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_JEOLLA_IMSIL;
    district.depth = 3;
    district.parent = northenJeolla;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_JEOLLA_BUAN;
    district.depth = 3;
    district.parent = northenJeolla;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_JEOLLA_JEONGEUP;
    district.depth = 3;
    district.parent = northenJeolla;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_JEOLLA_GOCHANG;
    district.depth = 3;
    district.parent = northenJeolla;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_JEOLLA_SUNCHANG;
    district.depth = 3;
    district.parent = northenJeolla;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_JEOLLA_NAMWON;
    district.depth = 3;
    district.parent = northenJeolla;
    await this.repository.manager.save(district);

    const southenJeolla = new Region();
    southenJeolla.slug = RegionEnum.SOUTHERN_JEOLLA;
    southenJeolla.depth = 2;
    southenJeolla.parent = korea;
    await this.repository.manager.save(southenJeolla);

    district = new Region();
    district.slug = RegionEnum.SOUTHERN_JEOLLA_MOKPO;
    district.depth = 3;
    district.parent = southenJeolla;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_JEOLLA_YEOSU;
    district.depth = 3;
    district.parent = southenJeolla;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_JEOLLA_SUNCHEON;
    district.depth = 3;
    district.parent = southenJeolla;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_JEOLLA_NAJU;
    district.depth = 3;
    district.parent = southenJeolla;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_JEOLLA_GWANGYANG;
    district.depth = 3;
    district.parent = southenJeolla;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_JEOLLA_DAMYANG;
    district.depth = 3;
    district.parent = southenJeolla;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_JEOLLA_GOKSEONG;
    district.depth = 3;
    district.parent = southenJeolla;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_JEOLLA_GURYE;
    district.depth = 3;
    district.parent = southenJeolla;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_JEOLLA_GOHEUNG;
    district.depth = 3;
    district.parent = southenJeolla;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_JEOLLA_BOSEONG;
    district.depth = 3;
    district.parent = southenJeolla;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_JEOLLA_HWASUN;
    district.depth = 3;
    district.parent = southenJeolla;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_JEOLLA_JANGHEUNG;
    district.depth = 3;
    district.parent = southenJeolla;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_JEOLLA_GANGJIN;
    district.depth = 3;
    district.parent = southenJeolla;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_JEOLLA_HAENAM;
    district.depth = 3;
    district.parent = southenJeolla;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_JEOLLA_YEONGAM;
    district.depth = 3;
    district.parent = southenJeolla;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_JEOLLA_MUAN;
    district.depth = 3;
    district.parent = southenJeolla;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_JEOLLA_HAMPYEONG;
    district.depth = 3;
    district.parent = southenJeolla;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_JEOLLA_YEONGGWANG;
    district.depth = 3;
    district.parent = southenJeolla;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_JEOLLA_JANGSEONG;
    district.depth = 3;
    district.parent = southenJeolla;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_JEOLLA_WANDO;
    district.depth = 3;
    district.parent = southenJeolla;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_JEOLLA_JINDO;
    district.depth = 3;
    district.parent = southenJeolla;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_JEOLLA_SINAN;
    district.depth = 3;
    district.parent = southenJeolla;
    await this.repository.manager.save(district);

    const norhernGyeongsang = new Region();
    norhernGyeongsang.slug = RegionEnum.NORTHERN_GYEONGSANG;
    norhernGyeongsang.depth = 2;
    norhernGyeongsang.parent = korea;
    await this.repository.manager.save(norhernGyeongsang);

    district = new Region();
    district.slug = RegionEnum.NORTHERN_GYEONGSANG_POHANG;
    district.depth = 3;
    district.parent = norhernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_GYEONGSANG_GYEONGJU;
    district.depth = 3;
    district.parent = norhernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_GYEONGSANG_GIMCHEON;
    district.depth = 3;
    district.parent = norhernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_GYEONGSANG_ANDONG;
    district.depth = 3;
    district.parent = norhernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_GYEONGSANG_GUMI;
    district.depth = 3;
    district.parent = norhernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_GYEONGSANG_YEONGJU;
    district.depth = 3;
    district.parent = norhernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_GYEONGSANG_YEONGCHEON;
    district.depth = 3;
    district.parent = norhernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_GYEONGSANG_SANGJU;
    district.depth = 3;
    district.parent = norhernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_GYEONGSANG_MUNGYEONG;
    district.depth = 3;
    district.parent = norhernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_GYEONGSANG_GYEONGSAN;
    district.depth = 3;
    district.parent = norhernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_GYEONGSANG_GUNWI;
    district.depth = 3;
    district.parent = norhernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_GYEONGSANG_UISEONG;
    district.depth = 3;
    district.parent = norhernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_GYEONGSANG_CHEONGSONG;
    district.depth = 3;
    district.parent = norhernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_GYEONGSANG_YEONGYANG;
    district.depth = 3;
    district.parent = norhernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_GYEONGSANG_YEONGDEOK;
    district.depth = 3;
    district.parent = norhernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_GYEONGSANG_CHEONGDO;
    district.depth = 3;
    district.parent = norhernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_GYEONGSANG_GORYEONG;
    district.depth = 3;
    district.parent = norhernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_GYEONGSANG_SEONGJU;
    district.depth = 3;
    district.parent = norhernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_GYEONGSANG_CHILGOK;
    district.depth = 3;
    district.parent = norhernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_GYEONGSANG_YECHEON;
    district.depth = 3;
    district.parent = norhernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_GYEONGSANG_BONGHWA;
    district.depth = 3;
    district.parent = norhernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_GYEONGSANG_ULJIN;
    district.depth = 3;
    district.parent = norhernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_GYEONGSANG_ULLEUNG;
    district.depth = 3;
    district.parent = norhernGyeongsang;
    await this.repository.manager.save(district);

    const southernGyeongsang = new Region();
    southernGyeongsang.slug = RegionEnum.SOUTHERN_GYEONGSANG;
    southernGyeongsang.depth = 2;
    southernGyeongsang.parent = korea;
    await this.repository.manager.save(southernGyeongsang);

    district = new Region();
    district.slug = RegionEnum.SOUTHERN_GYEONGSANG_GEOCHANG;
    district.depth = 3;
    district.parent = southernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_GYEONGSANG_HAPCHEON;
    district.depth = 3;
    district.parent = southernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_GYEONGSANG_CHANGNYEONG;
    district.depth = 3;
    district.parent = southernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_GYEONGSANG_MIRYANG;
    district.depth = 3;
    district.parent = southernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_GYEONGSANG_YANGSAN;
    district.depth = 3;
    district.parent = southernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_GYEONGSANG_GIMHAE;
    district.depth = 3;
    district.parent = southernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_GYEONGSANG_CHANGWON;
    district.depth = 3;
    district.parent = southernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_GYEONGSANG_HAMAN;
    district.depth = 3;
    district.parent = southernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_GYEONGSANG_UIRYEONG;
    district.depth = 3;
    district.parent = southernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_GYEONGSANG_SANCHEONG;
    district.depth = 3;
    district.parent = southernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_GYEONGSANG_HAMYANG;
    district.depth = 3;
    district.parent = southernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_GYEONGSANG_HADONG;
    district.depth = 3;
    district.parent = southernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_GYEONGSANG_JINJU;
    district.depth = 3;
    district.parent = southernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_GYEONGSANG_SACHEON;
    district.depth = 3;
    district.parent = southernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_GYEONGSANG_GOSEONG;
    district.depth = 3;
    district.parent = southernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_GYEONGSANG_TONGYEONG;
    district.depth = 3;
    district.parent = southernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_GYEONGSANG_GEOJE;
    district.depth = 3;
    district.parent = southernGyeongsang;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_GYEONGSANG_NAMHAE;
    district.depth = 3;
    district.parent = southernGyeongsang;
    await this.repository.manager.save(district);

    const norhernChungcheong = new Region();
    norhernChungcheong.slug = RegionEnum.NORTHERN_CHUNGCHEONG;
    norhernChungcheong.depth = 2;
    norhernChungcheong.parent = korea;
    await this.repository.manager.save(norhernChungcheong);

    district = new Region();
    district.slug = RegionEnum.NORTHERN_CHUNGCHEONG_DANYANG;
    district.depth = 3;
    district.parent = norhernChungcheong;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_CHUNGCHEONG_JECHEON;
    district.depth = 3;
    district.parent = norhernChungcheong;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_CHUNGCHEONG_CHUNGJU;
    district.depth = 3;
    district.parent = norhernChungcheong;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_CHUNGCHEONG_EUMSEONG;
    district.depth = 3;
    district.parent = norhernChungcheong;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_CHUNGCHEONG_JINCHEON;
    district.depth = 3;
    district.parent = norhernChungcheong;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_CHUNGCHEONG_JEUNGPYEONG;
    district.depth = 3;
    district.parent = norhernChungcheong;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_CHUNGCHEONG_GOESAN;
    district.depth = 3;
    district.parent = norhernChungcheong;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_CHUNGCHEONG_CHEONGJU;
    district.depth = 3;
    district.parent = norhernChungcheong;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_CHUNGCHEONG_BOEUN;
    district.depth = 3;
    district.parent = norhernChungcheong;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_CHUNGCHEONG_OKCHEON;
    district.depth = 3;
    district.parent = norhernChungcheong;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.NORTHERN_CHUNGCHEONG_YEONGDONG;
    district.depth = 3;
    district.parent = norhernChungcheong;
    await this.repository.manager.save(district);

    const southernChungcheong = new Region();
    southernChungcheong.slug = RegionEnum.SOUTHERN_CHUNGCHEONG;
    southernChungcheong.depth = 2;
    southernChungcheong.parent = korea;
    await this.repository.manager.save(southernChungcheong);

    district = new Region();
    district.slug = RegionEnum.SOUTHERN_CHUNGCHEONG_DANGJIN;
    district.depth = 3;
    district.parent = southernChungcheong;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_CHUNGCHEONG_SEOSAN;
    district.depth = 3;
    district.parent = southernChungcheong;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_CHUNGCHEONG_TAEAN;
    district.depth = 3;
    district.parent = southernChungcheong;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_CHUNGCHEONG_HONGSEONG;
    district.depth = 3;
    district.parent = southernChungcheong;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_CHUNGCHEONG_CHEONGYANG;
    district.depth = 3;
    district.parent = southernChungcheong;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_CHUNGCHEONG_BORYEONG;
    district.depth = 3;
    district.parent = southernChungcheong;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_CHUNGCHEONG_SEOCHEON;
    district.depth = 3;
    district.parent = southernChungcheong;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_CHUNGCHEONG_ASAN;
    district.depth = 3;
    district.parent = southernChungcheong;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_CHUNGCHEONG_CHEONAN;
    district.depth = 3;
    district.parent = southernChungcheong;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_CHUNGCHEONG_YESAN;
    district.depth = 3;
    district.parent = southernChungcheong;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_CHUNGCHEONG_GONGJU;
    district.depth = 3;
    district.parent = southernChungcheong;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_CHUNGCHEONG_GYERYONG;
    district.depth = 3;
    district.parent = southernChungcheong;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_CHUNGCHEONG_GEUMSAN;
    district.depth = 3;
    district.parent = southernChungcheong;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_CHUNGCHEONG_NONSAN;
    district.depth = 3;
    district.parent = southernChungcheong;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.SOUTHERN_CHUNGCHEONG_BUYEO;
    district.depth = 3;
    district.parent = southernChungcheong;
    await this.repository.manager.save(district);

    const jeju = new Region();
    jeju.slug = RegionEnum.JEJU;
    jeju.depth = 2;
    jeju.parent = korea;
    await this.repository.manager.save(jeju);
    district = new Region();
    district.slug = RegionEnum.JEJU_JEJU;
    district.depth = 3;
    district.parent = root;
    await this.repository.manager.save(district);
    district = new Region();
    district.slug = RegionEnum.JEJU_SEOGWIPO;
    district.depth = 3;
    district.parent = root;
    await this.repository.manager.save(district);

    const japan = new Region();
    japan.slug = 'japan';
    japan.depth = 1;
    japan.parent = root;
    await this.repository.manager.save(japan);
    const taiwan = new Region();
    taiwan.slug = 'taiwan';
    taiwan.depth = 1;
    taiwan.parent = root;
    await this.repository.manager.save(taiwan);
    const philippines = new Region();
    philippines.slug = 'philippines';
    philippines.depth = 1;
    philippines.parent = root;
    await this.repository.manager.save(philippines);
    const malaysia = new Region();
    malaysia.slug = 'malaysia';
    malaysia.depth = 1;
    malaysia.parent = root;
    await this.repository.manager.save(malaysia);
    const singapore = new Region();
    singapore.slug = 'singapore';
    singapore.depth = 1;
    singapore.parent = root;
    await this.repository.manager.save(singapore);
    const thailand = new Region();
    thailand.slug = 'thailand';
    thailand.depth = 1;
    thailand.parent = root;
    await this.repository.manager.save(thailand);
    const vietnam = new Region();
    vietnam.slug = 'vietnam';
    vietnam.depth = 1;
    vietnam.parent = root;
    await this.repository.manager.save(vietnam);
    const indonesia = new Region();
    indonesia.slug = 'indonesia';
    indonesia.depth = 1;
    indonesia.parent = root;
    await this.repository.manager.save(indonesia);
    const hongkong = new Region();
    hongkong.slug = 'hongkong';
    hongkong.depth = 1;
    hongkong.parent = root;
    await this.repository.manager.save(hongkong);
    const china = new Region();
    china.slug = 'china';
    china.depth = 1;
    china.parent = root;
    await this.repository.manager.save(china);
    const guam = new Region();
    guam.slug = 'guam';
    guam.depth = 1;
    guam.parent = root;
    await this.repository.manager.save(guam);
    const canada = new Region();
    canada.slug = 'canada';
    canada.depth = 1;
    canada.parent = root;
    await this.repository.manager.save(canada);
    const america = new Region();
    america.slug = 'america';
    america.depth = 1;
    america.parent = root;
    await this.repository.manager.save(america);
    const australia = new Region();
    australia.slug = 'australia';
    australia.depth = 1;
    australia.parent = root;
    await this.repository.manager.save(australia);
    const newZealand = new Region();
    newZealand.slug = 'newZealand';
    newZealand.depth = 1;
    newZealand.parent = root;
    await this.repository.manager.save(newZealand);
    const england = new Region();
    england.slug = 'england';
    england.depth = 1;
    england.parent = root;
    await this.repository.manager.save(england);
    const france = new Region();
    france.slug = 'france';
    france.depth = 1;
    france.parent = root;
    await this.repository.manager.save(france);
    const germany = new Region();
    germany.slug = 'germany';
    germany.depth = 1;
    germany.parent = root;
    await this.repository.manager.save(germany);
    const italy = new Region();
    italy.slug = 'italy';
    italy.depth = 1;
    italy.parent = root;
    await this.repository.manager.save(italy);
    const spain = new Region();
    spain.slug = 'spain';
    spain.depth = 1;
    spain.parent = root;
    await this.repository.manager.save(spain);
    const other = new Region();
    other.slug = 'other';
    other.depth = 1;
    other.parent = root;
    await this.repository.manager.save(other);
  }
}
